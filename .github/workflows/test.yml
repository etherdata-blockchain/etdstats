name: Test and release
on:
  push:

jobs:
  test-node:
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    if: ${{ github.event.pusher.name != 'github action' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 7.1.5
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "pnpm"
      - run: pnpm install
      - run: pnpm lint
      - run: pnpm build
      - run: pnpm test
      - run: pnpm release-dry

  test-swift-packages:
    name: "Test Swift Packages"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ["common", "env", "model"]
    steps:
      - uses: actions/checkout@v3
      - uses: swift-actions/setup-swift@v1
      - name: Test ${{ matrix.package }}
        run: swift test
        working-directory: swift_packages/${{ matrix.package }}

  test-swift-services:
    name: "Test Swift Packages"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:  ["transaction_service", "analytics_service", "block_info_service", "user_service", "contract_service"]
    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v3
      - uses: swift-actions/setup-swift@v1
      - name: Test ${{ matrix.app }}
        run: swift test
        working-directory: services/${{ matrix.app }}
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          RPC_URL: ${{ secrets.RPC_URL }}
          REDIS_URL: redis://localhost:6379
          USER_SERVICE_URL: "https://api.etdchain.net/stats/user"

  docker-service:
    name: Build dockerized services
    runs-on: ubuntu-latest
    needs: [test-swift-packages, test-swift-services]
    strategy:
      matrix:
        app: ["transaction_service", "contract_service", "analytics_service", "block_info_service", "user_service"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push ${{ matrix.app }}
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./docker/services/service.dockerfile
          platforms: linux/amd64
          push: false
          tags: ghcr.io/${{ github.repository }}/${{ matrix.app }}:pr-${{ github.event.number }}
          build-args: |
            APP_NAME=${{ matrix.app }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release:
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    if: ${{ (github.event.pusher.name != 'github action') && (github.ref == 'refs/heads/main') }}
    needs: [ test-node, test-swift-packages, docker-service ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2
        with:
          version: 6.32.9
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "pnpm"
      - run: pnpm install
      - run: pnpm build
      - name: Setup git identity
        run: |
          git config --global user.email "github-action.github.com"
          git config --global user.name "github action"
      - name: Release
        run: pnpm release --ci
        env:
          GITHUB_TOKEN: ${{secrets.RELEASE_TOKEN}}
