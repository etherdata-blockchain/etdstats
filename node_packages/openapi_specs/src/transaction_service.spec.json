{
    "openapi": "3.0.0",
    "info": {
        "description": "This belongs part of ETDStats microservices which will provide a transaction and block services",
        "version": "0.7.0",
        "title": "Transaction service",
        "termsOfService": "https://github.com/etherdata-blockchain"
    },
    "tags": [
        {
            "name": "transaction",
            "description": "Get blocks and transactions details"
        },
        {
            "name": "health",
            "description": "Get server's health info"
        }
    ],
    "servers": [
        {
            "url": "stats.etdchain.net/v3/transaction",
            "description": "Production server"
        },
        {
            "url": "stats.debugchain.net/v3/transaction",
            "description": "Testing server"
        }
    ],
    "paths": {
        "/health": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Get server's health info",
                "description": "Will return a error reason if not healthy",
                "responses": {
                    "200": {
                        "description": "Server is up",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "health_service.spec.yaml#/components/schemas/error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server is down",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "health_service.spec.yaml#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}": {
            "get": {
                "tags": [
                    "transaction"
                ],
                "summary": "Get any one of the following details by id: Transaction, block, or user",
                "description": "Multiple status values can be provided with comma separated strings",
                "operationId": "findPetsByStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Hex string representation of one of the following: Transaction ID, block ID, or user wallet address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Current page number. Only works on user info",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "per",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page. Only works on user info",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the corresponding info based on the id. Note: only one of three properties will be returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "block",
                                                "transaction",
                                                "user"
                                            ]
                                        },
                                        "data": {
                                            "oneOf": [
                                                {
                                                    "$ref": "#/components/schemas/transaction"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/block"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/user"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "error": {
                "type": "object",
                "required": [
                    "reason"
                ],
                "properties": {
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "transaction": {
                "type": "object",
                "required": [
                    "hash",
                    "nonce",
                    "blockHash",
                    "blockNumber",
                    "transactionIndex",
                    "from",
                    "to",
                    "value",
                    "gasPrice",
                    "gas",
                    "input"
                ],
                "properties": {
                    "hash": {
                        "type": "string"
                    },
                    "nonce": {
                        "type": "number"
                    },
                    "blockHash": {
                        "type": "string"
                    },
                    "blockNumber": {
                        "type": "number"
                    },
                    "transactionIndex": {
                        "type": "number"
                    },
                    "from": {
                        "type": "string"
                    },
                    "to": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "gasPrice": {
                        "type": "string"
                    },
                    "maxPriorityFeePerGas": {
                        "type": "string"
                    },
                    "maxFeePerGas": {
                        "type": "number"
                    },
                    "gas": {
                        "type": "number"
                    },
                    "input": {
                        "type": "string"
                    }
                }
            },
            "user": {
                "type": "object",
                "properties": {
                    "balance": {
                        "type": "string"
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/transaction"
                        }
                    }
                }
            },
            "block": {
                "type": "object",
                "required": [
                    "size",
                    "difficulty",
                    "totalDifficulty",
                    "uncles",
                    "number",
                    "hash",
                    "parentHash",
                    "nonce",
                    "sha3Uncles",
                    "logsBloom",
                    "transactionRoot",
                    "stateRoot",
                    "receiptsRoot",
                    "miner",
                    "extraData",
                    "gasLimit",
                    "gasUsed",
                    "timestamp"
                ],
                "properties": {
                    "size": {
                        "type": "number"
                    },
                    "difficulty": {
                        "type": "number"
                    },
                    "totalDifficulty": {
                        "type": "number"
                    },
                    "uncles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "number": {
                        "type": "string"
                    },
                    "hash": {
                        "type": "string"
                    },
                    "parentHash": {
                        "type": "string"
                    },
                    "nonce": {
                        "type": "string"
                    },
                    "sha3Uncles": {
                        "type": "string"
                    },
                    "logsBloom": {
                        "type": "string"
                    },
                    "transactionRoot": {
                        "type": "string"
                    },
                    "stateRoot": {
                        "type": "string"
                    },
                    "receiptsRoot": {
                        "type": "string"
                    },
                    "miner": {
                        "type": "string"
                    },
                    "extraData": {
                        "type": "string"
                    },
                    "gasLimit": {
                        "type": "number"
                    },
                    "gasUsed": {
                        "type": "number"
                    },
                    "timestamp": {
                        "type": "string"
                    },
                    "baseFeePerGas": {
                        "type": "number"
                    }
                }
            }
        }
    }
}